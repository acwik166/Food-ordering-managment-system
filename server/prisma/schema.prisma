generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:postgres@localhost:5432/foodable"
}

model address {
  id      Int     @default(autoincrement()) @id
  city    String
  street  String
  zip     String
  user_id Int?
  user    user?   @relation(fields: [user_id], references: [id])
  order   order[]
}

model dish {
  id               Int         @default(autoincrement()) @id
  name             String
  sizes            String[]
  ingredients      String[]
  price            Float
  restaurant_id    Int
  ingredientchoice Json?
  additions        Json?
  restaurant       restaurant  @relation(fields: [restaurant_id], references: [id])
  orderitem        orderitem[]
}

model order {
  id         Int         @default(autoincrement()) @id
  user_id    Int
  date       DateTime    @default(dbgenerated())
  status_id  Int         @default(1)
  quantity   Int         @default(1)
  amount     Float
  address_id Int
  phone      String
  address    address     @relation(fields: [address_id], references: [id])
  status     status      @relation(fields: [status_id], references: [id])
  user       user        @relation(fields: [user_id], references: [id])
  orderitem  orderitem[]
}

model orderitem {
  id       Int   @default(autoincrement()) @id
  quantity Int   @default(1)
  order_id Int
  item_id  Int
  dish     dish  @relation(fields: [item_id], references: [id])
  order    order @relation(fields: [order_id], references: [id])
}

model restaurant {
  id          Int      @default(autoincrement()) @id
  name        String
  type        String
  phone       String
  delivery    Int
  deliveryfee Int
  owner_id    Int
  address_id  Int
  user        user     @relation(fields: [owner_id], references: [id])
  dish        dish[]
  review      review[]
}

model review {
  id            Int        @default(autoincrement()) @id
  title         String
  description   String
  rating        Int?
  user_id       Int?
  restaurant_id Int
  restaurant    restaurant @relation(fields: [restaurant_id], references: [id])
  user          user?      @relation(fields: [user_id], references: [id])
}

model role {
  id   Int    @default(autoincrement()) @id
  name String
  user user[]
}

model status {
  id          Int     @default(autoincrement()) @id
  code        String
  description String
  order       order[]
}

model user {
  id         Int          @default(autoincrement()) @id
  firstname  String
  lastname   String
  password   String
  email      String       @unique
  role_id    Int          @default(1)
  role       role         @relation(fields: [role_id], references: [id])
  address    address[]
  order      order[]
  restaurant restaurant[]
  review     review[]
}
